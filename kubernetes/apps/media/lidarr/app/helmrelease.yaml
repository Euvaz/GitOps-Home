---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app lidarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/lidarr-develop
              tag: 2.1.0.3856@sha256:a804847dc155618645974f5576ffbfb6e90bb44a1add221ccc672e4641cc979e
            env:
              TZ: "${TIMEZONE}"
              LIDARR__INSTANCE_NAME: Lidarr
              LIDARR__PORT: &port 80
              LIDARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              LIDARR__LOG_LEVEL: info
            envFrom:
              - secretRef:
                  name: *app
            securityContext:
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups:
                - 100
            resources:
              requests:
                cpu: 15m
                memory: 249M
              limits:
                memory: 249M
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns/is-public: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Lidarr"
          gethomepage.dev/group: "Media Automation"
          gethomepage.dev/icon: "lidarr"
          gethomepage.dev/description: "Looks and smells like Sonarr but made for music."
        hosts:
          - host: &host "lidarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: lidarr-tls
    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config-v1
      downloads:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /zfsa/Downloads
        globalMounts:
          - path: /downloads
      media:
        enabled: true
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /zfsa/Media
        globalMounts:
          - path: /media
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
