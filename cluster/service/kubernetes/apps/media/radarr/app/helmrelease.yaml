---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      interval: 15m
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      main:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 100
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.10.3.9178@sha256:751c19ed421afe5cec92f48c39f225ad7a2a420425da8e4f9ea121e489e53f05
            env:
              TZ: "${TIMEZONE}"
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 80
              RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              RADARR__LOG_LEVEL: info
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 15m
                memory: 814M
              limits:
                memory: 853M
    service:
      main:
        controller: main
        ports:
          http:
            port: *port
    ingress:
      main:
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Radarr"
          gethomepage.dev/group: "Media Automation"
          gethomepage.dev/icon: "radarr"
          gethomepage.dev/description: "A fork of Sonarr to work with movies Ã  la Couchpotato."
        hosts:
          - host: &host "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: radarr-tls
    persistence:
      config:
        existingClaim: radarr-config-v1
      downloads:
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /zfsa/Downloads
        globalMounts:
          - path: /downloads
      media:
        type: nfs
        server: "nas.${SECRET_DOMAIN}"
        path: /zfsa/Media
        globalMounts:
          - path: /media
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
