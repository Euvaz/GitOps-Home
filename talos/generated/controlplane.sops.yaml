# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
# Indicates whether to pull the machine config upon every boot.
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:GmTLtxL8Jejo1wktVBaqFvQcngOhn0k=,iv:kZ/xbCTpwLxxqh32NpUM0FpUfgstupId/GjarSR2I84=,tag:/vwcVYOCO9AYn1bXY3ovtw==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:Gbjo7uhH3qHyz/INYcfQtGLsshHfl93QtUHOWA1U0vMJKoTx3lgpFZOx7X00A31xzgTDUEIN0YDSAfwXGWmO3AJlGPqne/ZtDycDDJaYwWNlQK3inlKqJy6vBN3HOENZofqCLGYpyRJx5TbkOKSeBsHcj5aSkedRfmUkxUJlgCp+TB9MqeE3pF1DcB5xYWEs9BlwtCl8VBSjGIhYdZEz09SuvzmgsBkUwEbydYuibn0pkgwb3aJqWr4QKRjakH/LR2Av/dwpV162d50dntB8Q9qGZaqWk1ZKmNGgi7fqqOsJ2cZ5EFdfLE4UOmpupFl6uwYgSZ2hDXsowsfjNaHaGGEhe9TEKMbtLhCJZltUjvgpB5odKncYn/grX/0CaCbDE5k94ldpdVHYuDzXCmGFuU3XtqbaqcuMlmJzHknyjsJEiZuFFqutul04vsVg3enZsyEuVBLIXVI+RQ2lvPtVoFI0v9CostA+1eRm3B/pnfuIN6K/FHPO1KhIOv/mMQdtCrE7tK/1R0h+wdtWz0hav7sFxX0Gss6JZM5+kBLMQp8+EagwmYyR36DD+bmM8+cN/tKSei+QtXc/sp+F3pmsBV0I84Zjf2eSshaWMxtVxbAJulBTUSFCuJoaEZYif0CgYGItrG7uF0W70ANb9g4LeMUlL8K+7R2aFsWO5MSb50Dy34ynF9x1EjZfVMlkNBUqOwNTsKO+FUYNoY6hDWVI4QoKm2EvRV59I4tE+9vNu+D0jRS0NJ6dZL2pl440PwDMQtmN1JnimuElCiP0aU1WnK4P+YGjltB5n9cIGEZp8n/B3KqlT1BLheYjFhO+uxx4uWn0ykfhuAeFGtD91Sy1rB2IMEgA9kRWCMQVo1H0PYwuH8Ar,iv:pcmqxJiynzje2cdJT8L/6rWBMvN7huWzAEtEq2miePk=,tag:lAHFfJqLTXXhrbo/itGPmw==,type:str]
        key: ENC[AES256_GCM,data:b+Rj0IzEZZlfF3tRVoukfjzXfOt+xDBJujx4w3vO4MO0736OrXAW3Sl0UHfmP5cpPUUsDPE2YYQVNzYS+vqaQuT03ginnBbV0Plre0vUJsgw0qX3qCz1SytSM3d3Z+SVbc2k82waLHv4Li3pEhKfG/ys0lAqrlzNWDnNnRbZNTaK+WhUQsgEQvBHG1AUNLsDxKD3hT7PA7oZUl930loPXGNe65tk/2RBLIo3zi3hh7GC3cGw,iv:PuQe3NLIjAIv1Nay0d6gr3pd2RWf4P8Zk9eyV3XsxxE=,tag:/xrFNafC6jwUJ/TiULU1BA==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.26.3
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example
        #       type: bind
        #       source: /var/lib/example
        #       options:
        #         - bind
        #         - rshared
        #         - rw
        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true
        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # # `interfaces` is used to define the network interface configuration.
        interfaces:
            - interface: eth0
              #       # Assigns static IP addresses to the interface.
              #       addresses:
              #         - 192.168.2.0/24
              #       # A list of routes associated with the interface.
              #       routes:
              #         - network: 0.0.0.0/0 # The route's network (destination).
              #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
              #           metric: 1024 # The optional metric for the route.
              #       mtu: 1500 # The interface's MTU.
              #       
              #       # # Picks a network device using the selector.
              #       # # select a device with bus prefix 00:*.
              #       # deviceSelector:
              #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              #       # deviceSelector:
              #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #       #     driver: virtio # Kernel driver, supports matching by wildcard.
              #       # # Bond specific options.
              #       # bond:
              #       #     # The interfaces that make up the bond.
              #       #     interfaces:
              #       #         - eth0
              #       #         - eth1
              #       #     mode: 802.3ad # A bond option.
              #       #     lacpRate: fast # A bond option.
              #       # # Bridge specific options.
              #       # bridge:
              #       #     # The interfaces that make up the bridge.
              #       #     interfaces:
              #       #         - eth0
              #       #         - eth1
              #       #     # A bridge option.
              #       #     stp:
              #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
              #       # # Indicates if DHCP should be used to configure the interface.
              dhcp: true
              #       # # DHCP specific options.
              #       # dhcpOptions:
              #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
              #       # # Wireguard specific configuration.
              #       # # wireguard server example
              #       # wireguard:
              #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #       #     listenPort: 51111 # Specifies a device's listening port.
              #       #     # Specifies a list of peer configurations to apply to a device.
              #       #     peers:
              #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
              #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #       #           allowedIPs:
              #       #             - 192.168.1.0/24
              #       # # wireguard peer example
              #       # wireguard:
              #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #       #     # Specifies a list of peer configurations to apply to a device.
              #       #     peers:
              #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.
              #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
              #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #       #           allowedIPs:
              #       #             - 192.168.1.0/24
              #       # # Virtual (shared) IP address configuration.
              #       # # layer2 vip example
              vip:
                # Specifies the IP address to be used.
                ip: 10.11.0.254
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/sda
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.3.5
        # Indicates if a bootloader should be installed.
        bootloader: true
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: ENC[AES256_GCM,data:muNiqQ==,iv:cXPrw1z7DH1M09VRdhEsnrmBYxQ824DQPQI000lRQQY=,tag:spJelcA+pFk+nbkraquBSA==,type:bool]
        # # Configure Talos API access from Kubernetes pods.
        kubernetesTalosAPIAccess:
            # Enable Talos API access from Kubernetes pods.
            enabled: true
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            allowedRoles:
                - os:reader
                #     # The list of Kubernetes namespaces Talos API access is available from.
            allowedKubernetesNamespaces:
                - kube-system
                # # Provides machine specific control plane configuration options.
                # # ControlPlane definition example.
                # controlPlane:
                #     # Controller manager machine specific configuration options.
                #     controllerManager:
                #         disabled: false # Disable kube-controller-manager on the node.
                #     # Scheduler machine specific configuration options.
                #     scheduler:
                #         disabled: true # Disable kube-scheduler on the node.
                # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
                # # nginx static pod.
                # pods:
                #     - apiVersion: v1
                #       kind: pod
                #       metadata:
                #         name: nginx
                #       spec:
                #         containers:
                #             - image: nginx
                #               name: nginx
                # # Used to partition, format and mount additional disks.
                # # MachineDisks list example.
                # disks:
                #     - device: /dev/sdb # The name of the disk to use.
                #       # A list of partitions to create on the disk.
                #       partitions:
                #         - mountpoint: /var/mnt/extra # Where to mount the partition.
                #           
                #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
                #           # # Human readable representation.
                #           # size: 100 MB
                #           # # Precise value in bytes.
                #           # size: 1073741824
                # # Allows the addition of user specified files.
                # # MachineFiles usage example.
                # files:
                #     - content: '...' # The contents of the file.
                #       permissions: 0o666 # The file's permissions in octal.
                #       path: /tmp/file.txt # The path of the file.
                #       op: append # The operation to use
                # # The `env` field allows for the addition of environment variables.
                # # Environment variables definition examples.
                # env:
                #     GRPC_GO_LOG_SEVERITY_LEVEL: info
                #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
                #     https_proxy: http://SERVER:PORT/
                # env:
                #     GRPC_GO_LOG_SEVERITY_LEVEL: error
                #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
                # env:
                #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
                # # Used to configure the machine's time settings.
                # # Example configuration for cloudflare ntp server.
                # time:
                #     disabled: false # Indicates if the time service is disabled for the machine.
                #     # Specifies time (NTP) servers to use for setting the system time.
                #     servers:
                #         - time.cloudflare.com
                #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
                # # Used to configure the machine's sysctls.
                # # MachineSysctls usage example.
                # sysctls:
                #     kernel.domainname: talos.dev
                #     net.ipv4.ip_forward: "0"
                # # Used to configure the machine's sysfs.
                # # MachineSysfs usage example.
                # sysfs:
                #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
                # # Machine system disk encryption configuration.
                # systemDiskEncryption:
                #     # Ephemeral partition encryption.
                #     ephemeral:
                #         provider: luks2 # Encryption provider to use for the encryption.
                #         # Defines the encryption keys generation and storage method.
                #         keys:
                #             - # Deterministically generated key from the node UUID and PartitionLabel.
                #               nodeID: {}
                #               slot: 0 # Key slot number for LUKS2 encryption.
                #         
                #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
                #         # cipher: aes-xts-plain64
                #         # # Defines the encryption sector size.
                #         # blockSize: 4096
                #         # # Additional --perf parameters for the LUKS2 encryption.
                #         # options:
                #         #     - no_read_workqueue
                #         #     - no_write_workqueue
                # # Configures the udev system.
                # udev:
                #     # List of udev rules to apply to the udev system
                #     rules:
                #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
                # # Configures the logging system.
                # logging:
                #     # Logging destination.
                #     destinations:
                #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
                #           format: json_lines # Logs format.
                # # Configures the kernel.
                # kernel:
                #     # Kernel modules to load.
                #     modules:
                #         - name: brtfs # Module name.
                # # Configures the seccomp profiles for the machine.
                # seccompProfiles:
                #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
                #       # The `value` field is used to provide the seccomp profile.
                #       value:
                #         defaultAction: SCMP_ACT_LOG
                # # Configures the node labels for the machine.
                # # node labels example.
                # nodeLabels:
                #     exampleLabel: exampleLabelValue
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: e0IKWFq8KhQORsgP1mwgYN1Pd3fEw3upMReGQoePJME=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:Zr/VrwF1AD0va4NIHu9r+7Fsup8oiycXijzkPwDNC+aDYQ1SLGzXvJzCrxQ=,iv:VPBz5Kn68jfrFcM2LQrMIPnFrr3XLccFOECTQt09C7M=,tag:7Rd+H0r+mcWVqkLDZBvIEg==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://10.11.0.254:6443
    # Configures the cluster's name.
    clusterName: kubernetes-home
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        # # The CNI used.
        cni:
            # Name of CNI to use.
            name: custom
            #     # URLs containing manifests to apply for the CNI.
            urls:
                - https://raw.githubusercontent.com/Euvaz/GitOps-Home/main/kubernetes/apps/kube-system/cilium/app/1.13.x.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:dGu90s7QNviYYdgj1ehizGcoR2EtyNY=,iv:1PzhzOUpizmBW05gQr8hfAK0e2PF3lDY5rGry3gorh0=,tag:Dxff9zyBFUvAas12SRMDpg==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: ENC[AES256_GCM,data:sr6BkqoEeUVH/lobVpA34XXXwhVQlQyd6Hkyf5bwXzeq/GpnRcZq3tgT/xs=,iv:QJhggXjvXhQM/I1Dnypg4KmSsWuyG5nCJz4zpLK6geI=,tag:iMyEd95TzXEt95XyHRYO4Q==,type:str]
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:qGhg/l+gJZxvjSA7y3yM4hddjkuYZrWeqAxQQLuy+l4aXhm1bX3Y9+4xLLnh80qjLiAiSl48JPjld5VFVSvplTBnuWhpEA11hGldTdAvfg1IyOjwYSQAwJjxVpv7dIMkGqt7U3NcAbMNDYhxCaGgJBemCukR+DNyKgb8UdWTj26mW6GPleHdEnQuaEvSeem0G4oIBJfjEjn+/G0SJQytVwh7wxZpoX4fu4ZwvD1rUfYqcCTT3IYaXl8FFITT4Dl2f9F0cPruJzK+TC8jXZ+9wxBnDgcJRl7Pok2vtscYCSKRL293N7oPsLBvYIAiwo6yVXMIkIl6katJdlECjVplflwepJ1G2rO8pDFxsqqbt1EmBdm9zaKyMNZgF4bYreaojLFYU9RlqLgnNTOZ9lV4AnXOoudeWDtOAQnM6J2LRaZhkkRVRUWyw38SMU/hok/Iezq+RpF0J6/qEj7qYx52o7plmpE7T4Sc6Mifz1LHcFwjwEsmA5DB73n7iDBRasK8bH1LMqoPGpDzjX0sx+fPXumPMBpAVlFga3++cCDYxEHDf+TO+nOkTNw2FO3fkavRTqK+KLo6OH0vQSharT5yjcIPUj0NLFXQLfq+VKFEFogBLvyod1n1JO5KbLgxAduUAymQDmnm45qKPD4qVFJkOOVlH3Lv5OzD8NRAdm5pNmHC4GSOkYT8hvS5ywS/3b7I23XadHh6G1C1KV52Ahdn5XCmm+SYAaa8w7eS0onFQRLbfGALedd1VRxei6LNGljwFgLR0lfWGzG9wqynAxd3ZGNo9gjTGlSMtCw3B+8dEq3pQ9wKEIJLT5DSFEgmZNidYgJTlJkCz/GFbsajXTLuZT58ZxZlfgG5lYMvFFRqAC588cAKr9Ylgh6Zcg9ibh2x88lYNCfjrft5QdUQlxcuvZQyMxa6FSGIUsvoN1QTMKqn/8oK4HM8Yd8JB5NyCHZWUliuo6YtiwWW3t4TK/GJf4GeyRuC3qphiO1KoAbxdWdrixPfjMNd4UYF8IAPAfl0HWfG31S9Bv4tTGb+dwy3jouLazm//nejLCIi9A==,iv:UTNCbi75ExtBY79vhf9EURyKoiTTAyywM6PNTbUZ+nU=,tag:KMl3Bffs/UdHr36vmlWTIw==,type:str]
        key: ENC[AES256_GCM,data:UdEAatfeJNTkoQpG+2Gt5SA6kC/fuYrflFyJYwxzjFJdqNJCb3uOTNxQ6JLba2QYwFLx1QMvRAT7Tw4uFNdg8d/re0dp+NzDjOKna8RdPFVOClXzLGb7LaOeaqjQ8QJfLUqEhpmBYJFXZq8YNY4x/5rv4Z+LUhv89tAGZBviwi7HbGtffWVTu+whwAZiSVVd9hfAU6NrnsIVtFD0EprhmKjEVR+XPC26+jGc5x+UymTG//q66TOd1QPY2nv/vZmS32wtQJRgcxcAwejEdo+D++/t2XBxw73P0Dht3Usm9REVaA67bQghOlFff3k9f/M72tAW3U0Pd2o+0SSQ/OwD7yaRYvxcvsv3KxPaUTK/NqAodpd5/xElzjKrE/QyEfPlXEFsv6bAbD61oQzts9V5cQ==,iv:jQovXWC7BbRTKpGP/+i4b0F9CLmtAyAPwXv5+yfZvWE=,tag:DYdWg1pw2eI6ihxFDbl5JA==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: ENC[AES256_GCM,data:kTLmIhH1cljnh1FmeFKfXFdYm1PP1Vi4xlR9BZkydpHVjifGUWxqaA/RqJvlAOSycL2V6QrLO4+tXUFMfIX3Ph/KfkzlUL3gIW+VB6/GozwczkK961ozEVlBM9CdocDhyHkttm/2iObtOJ5rBi+R1PIgVgZxMp2SGv+BBfFjcSFSjX6MmoyXxQymX5/rVR3HXv3akjmHq4if5wGzQ18Zm9l5KdwfBz5qSAO0P7UT2/luUNOZuP0u0fmi5dwaqxwHJeW9vL+pb9JRjWmY5+RMwhyvLt4FbyUMwtLbSmcm1YnIBTQgMiesee8nJuljkFz6b37F1joTiZpal6DoiK8XiRf0IbfggElu9bGk9v++VRcwTdG6R85VkRjHSZIe/+IKIgnJ5K7r6NoXFM2UhGxe/ATjf8W9q35RN0LPia7NAMwOmILcI5qLFVSAbTI9uZF3MeHYKbyTEmTupREbUV9dPTdHB2tLDIcr/d+Nk4idqgjJ8QZgacqdM99Qt5eie42pPgtJYLO5FYZ5AGPA/6C7fSXO4k3gPPaGKYFB9CmiRwWh0ieLqWnMj6iFjN9/J/fPfrJ9EfYnOk0urjXIeRxLRlPBXBy4MR2NL1GHkrlorsL7/9h/DIUqlxjmvYbu+NRdW4MqWA+Ws7T5oYhHTz+3KsaWKSIu1YMyppBqD9meqJ5je+7vgTiuROHAEOIeVsRZAJ0XGKu7iC11C8buOYFpzb3yaxvNVdPq7Ewj2MggDf9apINffXgKrTUHJGKQU3098GWydKy8mA9+QA/YEjjUgY4iiyb6qO9/o76vrywvtO6dmejXYnF3U/oRyqTXwkeUkLpg/xEufrqawRJUqf4BVDXZ79RzJO3rj1I93D2GgIzvuUe4UVVwGXURAt5RrZrWz+H48DYKue69/uFWXfegPrPT2u4DYwSAfF+kc/wfr7Cv8uBEJq2HBVAb6BpQSfjP,iv:kegGrDNJr2PUQ/ej9GJgx4Kp8KIoa+3tptlU1olvNFA=,tag:45EiTmhNg/BN636RSspcNg==,type:str]
        key: ENC[AES256_GCM,data:m37zHgGZ4nnnrVden1Yt6dcZqlUqf34KyeZcFRmyDCL0IGaLurIAAHGX1IAaXZL3u5RrEK0ymC6UB3wMxHwPoxjZOproIAUd8ay9tqJWBGqBZvAfYGSPuXCDiqzppQcSIoBj5xusHl8NArlZdTDULloJMlrBtDkFONx0fJd86QxsTiSu8aemsQuM1U2kASWJ56SHL3a2CyIuaaWP7KwSyexgYWfRlXlx62tf7CbysIMZ7grv/VlU7xr4Wrv9ObgF25cDeVN3R9c0bLbIZXbicCab+A23LdlzWsIu2H56S6TH9cvbdCmmtvHhZu9RmKMFYvTdymQGg0l8m9uitV4wnBQFs1FuwmyHlWt5cLbDyAn4drt8cwKg86AJB5M3i8iQz7SAbkwW72/NvSvaVgJ4AA==,iv:3DvJdi8ItLDw5z0Xg06vTUDl69aM4lzw4xJSu3bDczY=,tag:MLCdaYsDpZwvrbwlqqCKhQ==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data:KJ+qKISuV7KbzCh/k1GpH9xbtSL1vZl7zddAdH3Hdk1k3/lpcGwNrbum9Q8leYBQZ5OhgTRWUvOJ1rG5GByIp23Y8e4nB+8+FF6JM+hbQvatRBXNxDM/DiSkwaVoOQjjJjESKmaBD/HBV5s3Lfw0skBjjyZiWwZ5G4df2OwTK/5iYFNegmYPc9WDDrErgsCUTANHYq2Y7J1M70LaZVuacFR5ZqoBg1DCipD7OuAJQt6osHD7rYHshTcQ3z+CK3wvUjJbyTEk9OrlPQompRVrfxxCOjXIGavwtmLa8jdU8thizGgt/rtj3UbXOdmFLQKSkD69e1YkZPDT/oivwL4/RRLNTZ/UVJ3rxrEat0CAizf+z7L4ra3J5Eo06wPhfJMkK6gXix5P5SncAIE01EYZzg==,iv:crgIr9HJdAObVtgbDzO9arkdVJb1oC+JvpApHqgIanE=,tag:n3oK3iFBLQu0ShJM4rIXLg==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.26.3
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 10.11.0.254
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        #admissionControl:
        #    # Name is the name of the admission controller.
        #    - name: PodSecurity
        #      # Configuration is an embedded configuration object to be used as the plugin's
        #      configuration:
        #        apiVersion: pod-security.admission.config.k8s.io/v1alpha1
        #        defaults:
        #            audit: restricted
        #            audit-version: latest
        #            enforce: baseline
        #            enforce-version: latest
        #            warn: restricted
        #            warn-version: latest
        #        exemptions:
        #            namespaces:
        #                - kube-system
        #            runtimeClasses: []
        #            usernames: []
        #        kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.26.3
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.26.3
        # # Disable kube-proxy deployment on cluster bootstrap.
        disabled: true
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.26.3
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:jTJo2SIYlnTnKJwhFkmutzqngZ9fSAj2EftteBtuP7BBP+rG32aVyuhfGOdiKf/GKjCFiY29GvHXEhneQ53J/vXi/pQdZWmUqqYm7kE50pN4INVcufCX0KJGZkpQa/t91coZnhtRjFJB/0m2rikoQK751zeaNEGQWBJuXhRGkUk6bILyB6jIbX1baTAdgTsm1Ot8/gwjtCkL+wp2YLAR9SLY0xKr366Y2Cot2TzfKTlHsjt7VJ5N3oIOZedYCiGVQMuDcRxw35mOAwUoCzJ+gmfra3xxhKqF9OfH2CHpHgOVkzyeYlfS/kaJi4W4X4egA7U0dlu/nkRazQPmI2dJ+i181W8m4nR+wUc0k2lZ5+ZutcmDkellkOFgUaPUA93NWnRHokQEP4ED6XuozY+CxUKziVpChqN353fg017jpKeYpSqzPTdoJBV53kggrAg4UnlMarkgc47WtRLAjw3d/IGuTudypXsjXdoYLzl+nN2lyw8tnRuVoKwyZECYbYn0i0Gfsd4oBn1JkJtXH0OAXn3fOB5UP63F5fm3bxqZDO9Rf6lYfTyO2fU/AwRVMUL8B9getCIpEgVbF8Xqo8iEBxZlKvRGqUxPfvM3f+RrOU6rzwNkf/a3TVyI9X+iGxHGRRwyF03ip20QRmoHy88utx/2ipkywNvucQd0whOVGFVRjXq0eqYGDQ3HElMzyxZOl+fXs8dn6SfdJ5DBleGLVMqVH5bsWGd/O5kFDXnsfwzVy9ftUVoaw5BnRgvZcjsXlxbo/mK9IRhhhJGsm8J3a7H6YWhB6NyNNYlbkU4hw2NMLYLONTTW6VKCRTno8ShMqrBJJSaUcVyPa4Nln+y/zQcH9aB55uHAh661oCFy9JdRnJYMwFVwVygETtuX+kO89WB5NBc3eAq2AovdWeqf8mgXuUEHEDNI3DWr0nBd+dilzZYm7OZy31hn3NLQV4xul+Rf94NUs8nCWHpOqMb4dy/0yoQAUY67VdxWs/SWGoVOaahR73B021hXk0g7j4KeBXWaZQ==,iv:uXilbf4vpvyFQ2CMN/t9qVxdEUcIep3R1eFi2cGh4iI=,tag:sbrTOqAaZiizHy5DpcS8PA==,type:str]
            key: ENC[AES256_GCM,data:lEf7U1QZXr2npt+P+4WGwpc7dCrWkIPn60w0aw6r96pn1Bh2UW6B9d6LYOuox4q7FyTyh/PUAVmhSxfd5NnboLe0kizERYIyhvkMeIGamMjz14gEUdzTs60tGGNel/+d3PDLVHeEhCNJb+IV1/W8dX5y7sOoDXT5scohBHRq3JhdLqFwQvon8oKN43WJcpTza62J5GbvVRUdoZ4PxdUy/uhsEGjTnDYS46h5j9rVvSuSf7zjcun8lD42hBtX1OjauvcZCq2rWXtMaoV+A7uOf/EZcyX/kX47jwRllUF7sLPJx4siiMbJ3IQMOApSf6SpjFXaZRVD8lp8YNpdn2Zhph2Eh9Kj9ezANDZsgE/lLCwHpaJ7TH8v6QmGER+pOysSbCCMBwuGMGJGuGiDKJPIew==,iv:0tybv2SQjONHXmdfBSisHZNGuoHg/Xg0Iui7YGuULNg=,tag:X4vOGSyqnuXqoByLIcR6UA==,type:str]
            #ENC[AES256_GCM,data:VgKbbrweXwA1mKWfNk/JQNL/ouoYdLmY7Gy7xwGe6PM3gGGXoZ9TMIXs8PUgmzJIb5NfvmSGzA==,iv:9ouju05+ckwD9XerSzk9zF3i4fRW8P4rCncAK1XEHY0=,tag:2nXr+pqhu2lkkXbyyyCWdw==,type:comment]
            #ENC[AES256_GCM,data:Zo0h89cZutkV8MNFkjmxZYTY1GG0qmZwZLFOGxC5Z5y2UFSM5vbuspZUdA==,iv:U8UOyXmlE5dZWIgpb/V2VbCIuygKHkyEbgpaLfTWFVs=,tag:MVfcKk94Cvgygr65WB5nLg==,type:comment]
            #ENC[AES256_GCM,data:MybG9yU/WUXyFypa+HJHwAeyiQU1XLMCq0uDdYZyS6W1e7KGddlrVusP5qNX9cyolbgqEVDqqRHOy2OdqL+qB2XWIXdpdgYlJ+QE0fcLY/11DNLy051H5jA=,iv:y2f98JxT6RQoAbcXYTSF9D3hmYpE1fBKYqlk//xmjzM=,tag:8hAcsADCf8O5MtQx+yMRFA==,type:comment]
            #ENC[AES256_GCM,data:GxKCJwY3lJliBsxawE69D8Lerg==,iv:SnpAjcBFsSLEAhkpPUA8gfcn5Fd97qdx3tsxpjDtqXg=,tag:ts+oOIuKfOQfHxmb0RwzKA==,type:comment]
            #ENC[AES256_GCM,data:0Ll/v6JPnzLmr+gboG3xIO8=,iv:9SM5eBi2K/+laBd5aTdocM1LsCC2XoBRUkG2EPOpKpk=,tag:QHexsbjdPaJx3i2LYPCoKw==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests:
        # Install the kubelet cert-approver manifests
        - https://raw.githubusercontent.com/xUnholy/k8s-gitops/main/talos/integrations/cert-approver/kubelet-cert-approver.yaml
        # Install kube prometheus stack CRDs prior to cluster bootstrap
        # Ref: https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # Core DNS specific configuration options.
# coreDNS:
#     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age13srthcdyr08hp7w5xvezn5fex4p5kw7tky2pnrfef2u4j3uqsqgqwak9gc
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA1c3cyU3ZDRllqZTFiNjFS
            QkhoQ0p4Z3FZdUxVUmNJQjlkY05FQk0rRkJRCnV3Z2E5NHlyZFlaSm5lMGNWN0Mz
            K1lydTFFcXM1Q1VhL2RGTDNVTzVEVncKLS0tICtCaW9UVWd3VHhVZzhQWGJ4NFdL
            SUh6UlloK1lsQUdFRnpMN2MvZHBnQ00K+RK5XDYk501ZP7iFKbyBoagL2TaxrFTc
            cihQo8wwxy8bL2DvZkyHu4XQsvjsEIuh32uJFWADpAhs1yEx8i//xA==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2023-04-06T15:18:30Z"
    mac: ENC[AES256_GCM,data:gboJwWwftwaR2k0v7y4ZZOGD6wtBs2iPSwDuWYcDKxqq0odZGPwIAh/kCW4zZIdo7Ry2CteE7kKhRpV6+YVUOs7t03zjH0y9iFTLUzfWhwuxTghDl2ZZeTLl3K4DRxB3EtDkwOnISGoJdr9eoo/l/9bLZAe0aU9p+F6iKNdrxps=,iv:Lh4iLDIR2Ib3NHQ3cfzCzEYYoJMDjetfniNVEX8ruJ4=,tag:0raD9Hzl7sMgQE+F8hCGew==,type:str]
    pgp: []
    encrypted_regex: ((?i)(pass|secret($|[^N])|ca|crt|key|token|^data$|^stringData$))
    version: 3.7.3
