# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
# Indicates whether to pull the machine config upon every boot.
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:gFq9UxwFX0/nJyMoMvVCL+PMrXzAooM=,iv:7xHrOvQoWr/2USPuDZ3KzKCNC4Sd+LgO0wsmWIYVEqQ=,tag:kaPFPDuDclbj/cf1nf9byA==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:wrhPAMgHUeDesnkvMlOaRFKTFL/qWrtBk5JDFo9hWF65gq8prFmKAzRDsk4ORLFZR9fK7z8LIU/esbd2pllf5vauV0Alo0idtCdFXmdhScDCYOUSJxkOi8byOEhVHj/zD+6X4ZjuhaCOjtubKAefg8wMwDJAd8IuN7YRU77z9LaPzvgRa6Kc/rBGHSh9hXONdfOr7vxhB2rJO20+Eo0ECjzfCM8CoIo1VzLkPnyHcVUfKNwbm4E4I7Y4SbRGTgu1R0ndbDchizS/LaXAzRoRCHFe/vvGBSe9ah98l9b3ScH8+KQMd0k2lnrmM5neFSY0Pxb7aYAvFqx2GKO5P9JA62nLYcqKfqJcSbp3nEzffnMq42DCI1RmT7W6ysIXGJw/QfCkM4OjZMotRkoz3kY5GCo/ZaValMEwCzoVlsHEcJFRYdYxDcDvoJFIKM8dLB5h6Bj5zUReSQYeFhEvIWNn1fhgYfw8eUjkz0X++EwQocrMfM0S/1UPv1KntXl8pAEJdRY6aYFbeUv3lxd2qKwUoVgEmnlTn2qszEfydj+BhtkG0gBYmh5s6hioKtr+S5cKtUfLXd+IYKZyhEDqmtzyOxaMS8WoySsxlWdLnlsMdz2okEGayM1tYFHRuqxgIY1enljoHPuRgDDyQf204tk75qX+K/LOTiHKHmRoxc38eKkvEldLprjPlnzFv1UfGgaKo3fDI0Z8Po+nmKcGpqL/C18J8+2vRTK32JEBx59E82Kh3i+n2l9BXJ2JW/F0hlNiBYPWI+CJ/uvyvnuSoLKNxVPrhX7AxSC8bEnbnUEZml0+viicqx9321DEYiliRAaOt9BRunzjSVzy7Rda0OUIEAZrCx4+G5ULZrzBywz/9jtdunsp,iv:B8Z7TLnC2Er/M4XGl0tA1ynMdaxONcUB5NtihaDyNFQ=,tag:ycu0tAHM+qbFysh5zYPBTA==,type:str]
        key: ENC[AES256_GCM,data:fq/SIMo6vIrYt75bjLoO2dFdfKSNe/IqRQY5qLzMhYOsIeTDgiWNyemY+d/TehPMHfwUv2tueEOujLZG23kyxrQUVt5t6oacV1K1hRa3+aiLOf48u00RetF0/ifTW6Qrn2rDrrQeTZTKNviRAlkG8Gp42926TDTQTzYJheBfctjEcHVKELheEJXNFK744CZIEzibyTMPRSVgiTKqi2ejKmKkpQjFVkM7sqEkIaFuUNQ7LDfS,iv:a7JjanIxBXNygRFhULT8qrJEx8pdb9Sx6621bf1n0AA=,tag:hyy8wG4mYpObeovcM4ZZwA==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.26.5
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example
        #       type: bind
        #       source: /var/lib/example
        #       options:
        #         - bind
        #         - rshared
        #         - rw
        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true
        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # # `interfaces` is used to define the network interface configuration.
        interfaces:
            - interface: eth0
              #       # Assigns static IP addresses to the interface.
              #       addresses:
              #         - 192.168.2.0/24
              #       # A list of routes associated with the interface.
              #       routes:
              #         - network: 0.0.0.0/0 # The route's network (destination).
              #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
              #           metric: 1024 # The optional metric for the route.
              #       mtu: 1500 # The interface's MTU.
              #       
              #       # # Picks a network device using the selector.
              #       # # select a device with bus prefix 00:*.
              #       # deviceSelector:
              #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              #       # deviceSelector:
              #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #       #     driver: virtio # Kernel driver, supports matching by wildcard.
              #       # # Bond specific options.
              #       # bond:
              #       #     # The interfaces that make up the bond.
              #       #     interfaces:
              #       #         - eth0
              #       #         - eth1
              #       #     mode: 802.3ad # A bond option.
              #       #     lacpRate: fast # A bond option.
              #       # # Bridge specific options.
              #       # bridge:
              #       #     # The interfaces that make up the bridge.
              #       #     interfaces:
              #       #         - eth0
              #       #         - eth1
              #       #     # A bridge option.
              #       #     stp:
              #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
              #       # # Indicates if DHCP should be used to configure the interface.
              dhcp: true
              #       # # DHCP specific options.
              #       # dhcpOptions:
              #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
              #       # # Wireguard specific configuration.
              #       # # wireguard server example
              #       # wireguard:
              #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #       #     listenPort: 51111 # Specifies a device's listening port.
              #       #     # Specifies a list of peer configurations to apply to a device.
              #       #     peers:
              #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
              #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #       #           allowedIPs:
              #       #             - 192.168.1.0/24
              #       # # wireguard peer example
              #       # wireguard:
              #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #       #     # Specifies a list of peer configurations to apply to a device.
              #       #     peers:
              #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.
              #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
              #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #       #           allowedIPs:
              #       #             - 192.168.1.0/24
              #       # # Virtual (shared) IP address configuration.
              #       # # layer2 vip example
              vip:
                # Specifies the IP address to be used.
                ip: 10.11.0.254
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/sda
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.5.4
        # Indicates if a bootloader should be installed.
        bootloader: true
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: ENC[AES256_GCM,data:dU3ZzA==,iv:pdGHTI9MPOj2bYOS/HAyI4jiXBqcyWPgzij5SDFVVwc=,tag:b6lr4T4/IiYNkrBxbAg7RA==,type:bool]
        # # Configure Talos API access from Kubernetes pods.
        kubernetesTalosAPIAccess:
            # Enable Talos API access from Kubernetes pods.
            enabled: true
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            allowedRoles:
                - os:reader
                #     # The list of Kubernetes namespaces Talos API access is available from.
            allowedKubernetesNamespaces:
                - kube-system
                # # Provides machine specific control plane configuration options.
                # # ControlPlane definition example.
                # controlPlane:
                #     # Controller manager machine specific configuration options.
                #     controllerManager:
                #         disabled: false # Disable kube-controller-manager on the node.
                #     # Scheduler machine specific configuration options.
                #     scheduler:
                #         disabled: true # Disable kube-scheduler on the node.
                # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
                # # nginx static pod.
                # pods:
                #     - apiVersion: v1
                #       kind: pod
                #       metadata:
                #         name: nginx
                #       spec:
                #         containers:
                #             - image: nginx
                #               name: nginx
                # # Used to partition, format and mount additional disks.
                # # MachineDisks list example.
                # disks:
                #     - device: /dev/sdb # The name of the disk to use.
                #       # A list of partitions to create on the disk.
                #       partitions:
                #         - mountpoint: /var/mnt/extra # Where to mount the partition.
                #           
                #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
                #           # # Human readable representation.
                #           # size: 100 MB
                #           # # Precise value in bytes.
                #           # size: 1073741824
                # # Allows the addition of user specified files.
                # # MachineFiles usage example.
    files:
        - content: |
            [plugins."io.containerd.grpc.v1.cri"]
              enable_unprivileged_ports = true
              enable_unprivileged_icmp = true
            [metrics]
              address = "0.0.0.0:11234"
          path: /etc/cri/conf.d/20-customization.part
          op: create
          #     - content: '...' # The contents of the file.
          #       permissions: 0o666 # The file's permissions in octal.
          #       path: /tmp/file.txt # The path of the file.
          #       op: append # The operation to use
          # # The `env` field allows for the addition of environment variables.
          # # Environment variables definition examples.
          # env:
          #     GRPC_GO_LOG_SEVERITY_LEVEL: info
          #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
          #     https_proxy: http://SERVER:PORT/
          # env:
          #     GRPC_GO_LOG_SEVERITY_LEVEL: error
          #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
          # env:
          #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
          # # Used to configure the machine's time settings.
          # # Example configuration for cloudflare ntp server.
    time:
        #     disabled: false # Indicates if the time service is disabled for the machine.
        #     # Specifies time (NTP) servers to use for setting the system time.
        servers:
            - 10.11.0.1
            #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
            # # Used to configure the machine's sysctls.
            # # MachineSysctls usage example.
            # sysctls:
            #     kernel.domainname: talos.dev
            #     net.ipv4.ip_forward: "0"
            # # Used to configure the machine's sysfs.
            # # MachineSysfs usage example.
            # sysfs:
            #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
            # # Machine system disk encryption configuration.
            # systemDiskEncryption:
            #     # Ephemeral partition encryption.
            #     ephemeral:
            #         provider: luks2 # Encryption provider to use for the encryption.
            #         # Defines the encryption keys generation and storage method.
            #         keys:
            #             - # Deterministically generated key from the node UUID and PartitionLabel.
            #               nodeID: {}
            #               slot: 0 # Key slot number for LUKS2 encryption.
            #         
            #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
            #         # cipher: aes-xts-plain64
            #         # # Defines the encryption sector size.
            #         # blockSize: 4096
            #         # # Additional --perf parameters for the LUKS2 encryption.
            #         # options:
            #         #     - no_read_workqueue
            #         #     - no_write_workqueue
            # # Configures the udev system.
            # udev:
            #     # List of udev rules to apply to the udev system
            #     rules:
            #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
            # # Configures the logging system.
            # logging:
            #     # Logging destination.
            #     destinations:
            #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
            #           format: json_lines # Logs format.
            # # Configures the kernel.
            # kernel:
            #     # Kernel modules to load.
            #     modules:
            #         - name: brtfs # Module name.
            # # Configures the seccomp profiles for the machine.
            # seccompProfiles:
            #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
            #       # The `value` field is used to provide the seccomp profile.
            #       value:
            #         defaultAction: SCMP_ACT_LOG
            # # Configures the node labels for the machine.
            # # node labels example.
            # nodeLabels:
            #     exampleLabel: exampleLabelValue
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: e0IKWFq8KhQORsgP1mwgYN1Pd3fEw3upMReGQoePJME=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:8o5Pu5eyO3NrjSoNShirre7M7RT5overkQJgdnJXc7lwBydPhd4S9J8miPk=,iv:IcT8H2VoWd8XoDV/HQION8X0WL+PHCe6IaogKSI7l0U=,tag:SNvubwKuwh03lqnmM6pWdg==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://10.11.0.254:6443
    # Configures the cluster's name.
    clusterName: kubernetes-home
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        # # The CNI used.
        cni:
            # Name of CNI to use.
            name: custom
            # URLs containing manifests to apply for the CNI.
            urls:
                - https://raw.githubusercontent.com/Euvaz/GitOps-Home/main/talos/integrations/cilium/cilium.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:Jhp5T4fcUEu4DDIiAhcvfVPJnrNPDDc=,iv:f/8H2xbWfrSuWePYaDRrOOixoptNo0lTDf/y681G8tM=,tag:UR8N5F4pUFwGn50OOOHlNA==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: ENC[AES256_GCM,data:YMXE6Zk3e9XkJ2TkuA02sqdKzmXSy+KZexng7YS2AjnTbKJ9nP0XBIIOUK4=,iv:WtILsvti0DLHaWrMy2izIwDPTa21Pym4hJCy7STdc0w=,tag:pNqBcFG9j3dY9SitA1RZ1w==,type:str]
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:fSrZzKLktDZZlO5z1GGHBgYJBe5zsgg9iiG9VFFRTPOknlnD4f/hD0mX82io1Zzcw5OeMAVNSGson8+swtlxcjSQqm0iGFXc6bNh9+6ux5JAFPL0QIGwazlwUwqYfIOQ6RF7cEQes+y3R88H99tJaHvlpd4qfzzi/n9IMqwW71D/f7GlKBKgwzSfda/O7eI2MI/eYRKBG0c9ezxodyJ2YyKiBEE/eOwwHxmhPREpHPpXXF6vExiiMW19JxvhEwwg8Z12ZC/KDMbeix6cOcQ+4O+9EXP1Np8suwsoNOnjeYegbiN6nYXqA58KqeKg8PgY73K2xvyMO35JDKDVlueY0cftcYUJUvPJew0ESK/EEB+wbHEk4QKWfxDdvcHtjnEkpvhFG/kdskdV3B4WNSU2JNh7E2sQV3JDcmsqIyeKTECb0yYpaYnjIs/v3jWstfV4jJUqqOST1qAi+k6Ub6KkLXJGTL8qv8iPdbuturG2p04+j+wAxbq1LJ+PwUXT+i6qcb/N5hBVvnwFIf8IMO+2wA2JGBcALGHy+KST2/IGBxurwKlkynpEo4Xe++EkGQux6xDO+arW2vNbuyfz8SWqA5WXmftRDZLyqE8h7X37B1LLGCLspkmrdkAQEYGl/A8FOGn/f8HpQVUzilqK8wuy9tPCoF6DPDoqQjBt8NPk1qd+NPI9QkbbBNJ6SNnpXIFWOvgP88YFIHPCh46tlqXDIY11MnnlUBTUCXKto06IXj1dFrIkt/TkijU1jwGbh1mTKIinfuBu6a0laihfCboi8dPaIQ0MKyA6h/B5Hsn2QcQ0tfQbzDxFTCqWpqP6jW2uh4rRJgF9B/tw8FsZVIqipecKLcHwYSg4ZLJkSjL/mqVRkMS3lQooH0NTuies9nwPO4VJKwSnu4deXrAyAdIqhdBELcmcPyZZBaAkcqNmxkmrXzsMQgDLTi/c+xRt9L9JdqlpJTU4iMVp6+sLC75lMafi2KWieTF7iXGB1gWNVmArGaT+UG7RPCQb6i6mlYY9cHU44DEEnG9cFsC3kACEaLvzMNjLcWYTyWzFeA==,iv:+ItzlHcYAh4ncCfn1YwHSKYgP6N9Xfl1eck/WA1KvAM=,tag:+8ISerGMNb27ae/WXcxfUQ==,type:str]
        key: ENC[AES256_GCM,data:MRvmL0Quq3TMkgb2Q6hZ7wkV/r1KHRYzGq7SGp/2i8kAs5qp7s0zcpnCNGb64XCDPTjaxQVV1ezEAQLFahc1fd+jjYGaR2f+lFxnmpVqxHFb6mugp54Hh/v/FS7iN+dj7k56E6kQmJ1SFqnU9r7WYRKnzy8mrUFgq2EVgdWFGUEVqJETfvCTSXgn/N2kBZIx2zXLtq72RUpkOulESLJieBsYebJQDScNgaJ9ERdp4/yGe25eyECWqv61BY0wtZQs4plk8WadA7rWdc4ZC3+uImdclEevuoJ/EGZud/Elj1M7+wRNdm8BIFM56ZS0FcLQWLrdH4eMdJha9NEEZCvSQkCUbcRkUxNoZ5d0g3DNoDj48tu5vHwPwHf56MuyrH0OSTm//KmVBo8Fa36tt7Oiyg==,iv:zIyO929fkm2tAtGHBD51VY1wHSZLtzty6CIdmkAGJgY=,tag:r61ZtIIYTrWDNqB7mybXHg==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: ENC[AES256_GCM,data:yz8rVGWVhKaTvv7PapOFtAZdE8mymVU9sz9BanOn687CetTpUIJMS+juMRzHq8QIrcbS/Qy841l70Plsa5+0Syb9fZXbiptAwE4ijxx9W6G6J4vPZPLY9xTWmH3KejpqLbTGSqJ9EK03+EqsZqPY9r3wwvTQDWmu0JtzW1+XFVQzZlKzGqGR2PbD8XwTiTdTWhNajek9lc0OsKYkZElmPMawtEyvwJb39+Qcofq1PHsCNrzQ2QmzZNjOzv8iefDNFk+i+YtfrkeF0+1AXdCbIDr2uftkZ1LekG3J1BruwGAW4XjzS5wqZUk3Jt1kFGswTP6dhtGm137Jc6yEZls9aYZwu1tpxLe4escv5Iax9iScH2lV4k5sMW1bIL3prIzKvVItKT+u2Wvo5l1zVl31Frv2AzCnWtDW5Udxq7QJnZdt4RWDnMcUGDRmR5YVx/GB6NpAtYMsJxUCu7ibIfBpqlEfFG5yIoEZEA03GpPp17XdFJ2mrvIhlxlznD7OUxd7rZsbGt1VB9QxpJVfo0xth7swAwe+DwjHxZyk9vrI/Fop/rrbPehzkf17Vs4Z1WXG9tSf/qBZGfqyEQHapiU98mj09n2MzbG5bN3mMnTB+2Q3gYAGdAsw9FbNfNPQIndv56yFnsAlNjB/oAzpOhW70bORds7MZf99tnNb727tyqr9rWcXQMncBLglXQ5kKynbUsVMFGoGbHubiOrRSl+S1r7wf0Lq0mgFwMHo+rBvQujxBCO0xF8ytxr4XedYI/AxoexYDJfhwLb/ZXLCuGISC2hp7vpnGX6r1YBR9K1+/FUY0LlvUwVxB4ueLRkn5cD0FnizvzMB8CV+1K22e6PKodhoRH0GMMOEBo8UdnFCj2vl+XixwY3HmEh462km+g1tWV0SubhUs7uJdkFzrYABVXeCeYzwAMddHQ/qke0nWFp2B0vlzBGYEptlz5sBYEon,iv:2eCQH4B4xidNVGrBc1A7ImlhHKmDTVETE4JicN2hq8s=,tag:QikDkiOCeO5Kid97v7bL5g==,type:str]
        key: ENC[AES256_GCM,data:yIBJ88YE2vTial1AnRPizDLaNSM9ZPLv0b503BOvfcg0QLL5l+p+OgHPKbUUaHbJ8BQL2af8aZ4f9JQajj8z2Rq1d6BkTp7oYaBCm74V8c/udLinTJLUQ0YTBlVcGVKsbXFIvqwVHGaOf7rcVG9Y5KwtlnZnyg5qhlqFCfonvgwpvekdsoqlTFw/BVEr0TvDybBFe0m9kVxU+gdqTDFXLxBAU6UpOgyJ472CXs3w4wtV1tcjTjS8F4+hHhD4DrUzdtYEX3Gzviizs7b80YZAQCcstCOaSjqub3f8kt4biEST6/tEHXtciyPZT4H9GdljZLSBf7FirJkxVFaAMVBtO5UMG4GmJ/T38EqpTu0RhahF26o38yMuMgncq2eCmFWzUmqJBt4MVO7liw2aX72KAQ==,iv:Tp4tW8XcICilqxLwIdWy8wqQytxUCw8EGq01zNRYHgw=,tag:eArLyIx/swyLm/3XQ0ST5g==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data:hRi9+DS+b829SKo5xFd7SayM4KEvemhJQSBo7h9LBgF9ZHQJIhe8vcz1BzOpM/nvlHNMWTBkWn2SJuDi4AnBJmwys5kDvh77Xwb1/PQiidl4eoSZMrRO7SDfYZN+WDJir1qjy5uYKDSTz2ML6Kmsc6Gs7Os4jryLm4DAWUWavr1N2WMoKF176hif5NomPg3keVQRHS2ESFUUayAYD8nUASfLPumj+4a37hR616RQr3j1HVLeTEWLxDk6G2/3PVC9eKnbFT5KhloEP11PZ8c9ofLapkHUghLnifimaPx7jwQojOK5/ZRxHk4+CVM3Pcc5rz9TeEOyYNLgpLC76qzu8KMy9NNNR9fnkTM28tVJn4F0eJGK9x9GYmWyh3OljON0X8UieM8sJojNtpwsjhRcrw==,iv:slbHjiIlR7e2wCSzVMJcKIUATCBdcwNe4FcBJoBztyc=,tag:mVVDevsZzOMt+AT34NLAEw==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.26.5
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 10.11.0.254
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        # admissionControl:
        #     # Name is the name of the admission controller.
        #     - name: PodSecurity
        #       # Configuration is an embedded configuration object to be used as the plugin's
        #       configuration:
        #         apiVersion: pod-security.admission.config.k8s.io/v1alpha1
        #         defaults:
        #             audit: restricted
        #             audit-version: latest
        #             enforce: baseline
        #             enforce-version: latest
        #             warn: restricted
        #             warn-version: latest
        #         exemptions:
        #             namespaces:
        #                 - kube-system
        #             runtimeClasses: []
        #             usernames: []
        #         kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.26.5
        extraArgs:
            bind-address: 0.0.0.0
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.26.5
        # # Disable kube-proxy deployment on cluster bootstrap.
        disabled: true
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.26.5
        extraArgs:
            bind-address: 0.0.0.0
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:ZU7XoQGdud6iEjF+RZFKoBEY9Z9dYkTGY3KuOqGN5n8lTXe5SgA78B5zvsGKGS2EFZeyfAbfWgMopmD756D67SQXSWOOC8LrczdB3TvYYLk6j3qE6feJd3qsF7QJythQXNsZXkZ3GWq6ZiteYXj8fYWosl9t/7BW54JMnCPOUjY+vXflBn7kK6qA23/uOTi+rKpdV/2SorGr9nFXcnPUUVJSV8E+e3V8/m9HOy7Ml/Dybc0MUzJrrl3ncydiw8CCznSh7xVucI7+aKy4TI8DUd+X1wPB57BSh0Oe9Q862lWoI3W7ueM7FJk1M1jUPL+xpoNNK9gAC8/kkUIvQc2UmNEYMRpSyWRXpDz+263eEebzTPyWTEcGlMIIaUZ0GK7um+pbvzwkw3ezAy1A1VrY4wtQWZgZWRHrRPlLOaeAT4RkYifZ45mUnPQPlphEW0Lggz4NHTrFIJ1TojLOxOuw6cIOGIS+xzos3nPW2xac2TXjNYlmW7wiZR+np3/IXzQ5EvViUNBqc1ZK/gjUf8TqCfa8RjDrD3m/ryAxFWzOvMGHX86Iv0y7pT1aVG4hS30AWsGwC6Eqb2w6uQTEQw1mSf+3cr69aXQNSpH8QfXL39K0bxgKQ0ocM3rgpcqYOP5wexDXDnE0ake5s4hWcTWpMtrQDUkdLcx2eiFDTCks+0rkT0LMHLF6nwP9F7C4GeEgUu3FpVgFz1HNklP699Z5giCVUQdO9g8GQvke6EaKtYBYiSaaLxyxa6JjH7n68eS+/6Vjp+7WhnzXHL3mo05meSgHpB7VqHG9D0QTRuWz7KI+YEA7PIYXgpb5kxI9hcU3siO25761QY3g9H46biW53cDQrOPfigE0yz7EbDIsR4aIfGhXK3IcPzqsrVsUTJLw3y99xQjp8xK+VEEjTqXb1y9/zajCluja5KAANkQeSjskoMosapKJ2LoHhBkYbaq/tae+/mdPyDf1zqAyUo14ipO1OxZXXpqdfCDk1sAQ0rovdzcPdKsx4kzW2nuWmorBV/VVIw==,iv:qB1B8m8Bt89i+gL/SMbZWhPasqFZDFMqhASc+IcCEks=,tag:BNlWxIj+BQ3b5y3t3FCSjA==,type:str]
            key: ENC[AES256_GCM,data:PzQMiH31QuqCbNr9A9HthdRS13n4ExVxwKoFIQNW9G4nUXyBcy8NWKnU+JXO/BQyyQuZSss5FlMwu+Srb7BFwTeGdtLvmbevf6sJS0s+Q2Dd/Gng6FLu/mwqeMwnEOf/Nz2c4/3w2AEpeL+ppOPAYQHyXQVIfjtlH+7cBRzpBXms4NTik2fU94rWAcWY5Ihh53zZG/G+tB1qr2QvS5uMy2q8m4MPEKc5yNLHjGpEfkI3/f/jPDBWaFUuIDireLMfuFhdjYiyUeTLTCH+aEBSmGzgZiV9zep5PfbnqZovvU3mMzAZhgH4qArPRPjNVKcsczrAQMdckvnV681cKkbIO4wGu1D1L8Q9osh/cmc2SPS0ag9z4ac2Yl4wXa/NIaeP7z76kvp2wtor5TIZHwF3+A==,iv:wbez/tV/y0VEFP05VN9GwASEcAhw7k3m9YJ20wZhxLc=,tag:+8tfbE3DsAhW2O4apOGGBQ==,type:str]
            #ENC[AES256_GCM,data:sYGcPzEO1YfABjmfU+o577xc5Ghe75VVRGrktK2MLGp0GyzHiyrJNB6NKi3hp1i+ttdU15yOdA==,iv:Gcrt+r8wM9ZiN+Wl7qe/s9FbXlKiOeyd//vU5fV4HGg=,tag:CnVRkVBnueToTjgRrtFfgQ==,type:comment]
            #ENC[AES256_GCM,data:ZdvIwpom15NZyOmtIJP+G/YNUcr6PjuDwIdgXY1kA7U75scxn1ZPazmgXQ==,iv:dU6ya7cc7SCb7NIBm9X9PUQdDmp6mfQjKD0LrSpWBSQ=,tag:cZELMsjeKyUEPAPNSzlXtQ==,type:comment]
            #ENC[AES256_GCM,data:04HxTIrP4rm4xdCX16EdOBk0JmnFHvyQeVIzrd+673WfFETXXb0TqLYr4O00okMaxR8asvzI0p3Yg8UFVuZMyRIFRXlYANj1mZH7nW2zhJIxq8LZ12HrRP8=,iv:ED9YZYQ31AFVT1+/XgjQKd6bYw5WB2RjC/0zX1RNiMA=,tag:aFt/Qo33gXBtD9ky0UOCpw==,type:comment]
            #ENC[AES256_GCM,data:/9AJz8g39Hrk1tD7B5FwZV3clQ==,iv:3xSI/E1w+4yiLCqW8eJdjXpUcLcSbc5q7GVjdK6q4+0=,tag:/ku5546Mwubn3WuSD+qouQ==,type:comment]
            #ENC[AES256_GCM,data:XQTo0EO98K9stussjDiKDnE=,iv:4WNGOGQSpBXWmCewmeBLHBOfJnAEy5MLxWXcuwvX2KI=,tag:lkP1PdGmaHnizJVYP0SrxA==,type:comment]
        extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
    # A list of urls that point to additional manifests.
    extraManifests:
        # Install the kubelet cert-approver manifests
        - https://raw.githubusercontent.com/Euvaz/GitOps-Home/main/talos/integrations/cert-approver/kubelet-cert-approver.yaml
        # Install kube prometheus stack CRDs prior to cluster bootstrap
        # Ref: https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_prometheusagents.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # Core DNS specific configuration options.
# coreDNS:
#     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age13srthcdyr08hp7w5xvezn5fex4p5kw7tky2pnrfef2u4j3uqsqgqwak9gc
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBkcWdhZzhqNTFCVHgxN3pw
            QnlPN0tGTGdOalM0dEptVk1HWE1OVFVqMWlBClZOR3pLWHJvTjRHQlZ3VlZ1Q21n
            eVpRYWZMdFRSTlB6dGFzU3ZTbHd6NE0KLS0tIC9wNno1WVBKVk1YaklETVEyZnM4
            bVB5ZjJkMEk4WWtUVWRIaUdNTEV4d0EKSlTw7r8DpTmnaty4Uuiya/AyPcEU/q0T
            NQvKn40fqkHj9Cw+vSR0yGFw4ScjSx4Wh0Nu8uZeRius5M9g9o3K1g==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2023-12-05T04:56:12Z"
    mac: ENC[AES256_GCM,data:arJcN8BSSFkBWWYzDp1aIEOozPQoSLcS5P/sV+6yGlfgIldTCFAAeH9Q+nQ07yOi1vVzRmUJ+7CClzstMZKVxxzRXgBClzg7tb+5Pvm+b1TKTCfJ2DP5fzRTTB07fd/ZEQgIqFi7WqhysPsKFjafGGUh1GSISCp3p+2VjIjLIww=,iv:KTr1IfWQZuNG61lbr2C8xXr3v0qD9BQ2nbLlP0kse58=,tag:JLOBOU6lcUtII1UuLXrk7g==,type:str]
    pgp: []
    encrypted_regex: ((?i)(pass|secret($|[^N])|ca|crt|key|token|^data$|^stringData$))
    version: 3.7.3
